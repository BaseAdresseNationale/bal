version: 2

defaults:
  workspace_root: &workspace_root
    ~/bal

  nodejs_container: &nodejs_container
    working_directory: *workspace_root
    docker:
      - image: circleci/node:10-stretch

  golang_container: &golang_container
    working_directory: *workspace_root
    docker:
      - image: circleci/golang:1-stretch

  filters: &default_filters
    tags:
      only: '/v[0-9]+(\.[0-9]+)*/'

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v2-bal-node-{{ checksum "yarn.lock" }}
        - v2-bal-node-


jobs:
  checkout:
    <<: *nodejs_container
    steps:
      - checkout

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./

  install:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore yarn cache
          keys:
            - v2-bal-yarn-{{ checksum "yarn.lock" }}
            - v2-bal-yarn-

      - run:
          name: Install dependencies
          command: yarn --frozen-lockfile --ignore-platform

      - save_cache:
          name: Save yarn cache
          key: v2-bal-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          name: Save node_modules cache
          key: v2-bal-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  lint:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Lint
          command: yarn lint

  transpile:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Transpile
          command: yarn transpile

  build:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Build
          command: yarn build

  test:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Run tests
          command: yarn test

      - run:
          name: Compute coverage report
          command: yarn nyc report --reporter=text-lcov > coverage.lcov

      - run:
          name: Upload code coverage to codecov
          command: yarn codecov

  changelog:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore changelog cache
          keys:
            - v1-bal-changelog-{{ .BuildNum }}
            - v1-bal-changelog-

      - run:
          name: Generate changelog
          command: |
            if [ $CIRCLE_TAG ]; then
              PREV_TAG=$(git describe --abbrev=0 --tags $CIRCLE_TAG^)

              echo "[+] Running for range $PREV_TAG...$CIRCLE_TAG"

              node_modules/.bin/lerna-changelog --from $PREV_TAG --to $CIRCLE_TAG > CHANGELOG.md
            else
              PREV_TAG=$(git describe --abbrev=0 --tags)

              echo "[+] Running from $PREV_TAG"

              node_modules/.bin/lerna-changelog --from $PREV_TAG > CHANGELOG.md
            fi

      - save_cache:
          name: Save changelog cache
          key: v1-bal-changelog-{{ .BuildNum }}
          paths:
            - .changelog/

      - run:
          name: Display changelog
          command: cat CHANGELOG.md

      - persist_to_workspace:
          name: Persist changelog
          root: *workspace_root
          paths:
            - CHANGELOG.md

  release:
    <<: *golang_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Install github-release
          command: go get github.com/aktau/github-release

      - run:
          name: Create GitHub release
          command: github-release release --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --description "$(cat CHANGELOG.md)" --name $CIRCLE_TAG

workflows:
  version: 2

  push:
    jobs:
      - checkout:
          filters: *default_filters

      - install:
          requires:
            - checkout
          filters: *default_filters

      - lint:
          requires:
            - install
          filters: *default_filters

      - test:
          requires:
            - install
          filters: *default_filters

      - transpile:
          requires:
            - install
          filters: *default_filters

      - build:
          requires:
            - install
          filters: *default_filters

      # - changelog:
      #     requires:
      #       - install
      #     filters: *default_filters

      # - release:
      #     requires:
      #       - changelog
      #     filters:
      #       <<: *default_filters
      #       branches:
      #         ignore: /.*/
